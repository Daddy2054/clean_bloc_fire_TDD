// Mocks generated by Mockito 5.4.3 from annotations
// in clean_bloc_firebase/test/src/features/feed/domain/use_cases/get_post_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:clean_bloc_firebase/src/features/feed/domain/entities/post.dart'
    as _i5;
import 'package:clean_bloc_firebase/src/features/feed/domain/repositories/post_repository.dart'
    as _i2;
import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PostRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRepository extends _i1.Mock implements _i2.PostRepository {
  MockPostRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Either<Exception, _i5.Post>> getPost(
          {required String? postId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPost,
          [],
          {#postId: postId},
        ),
        returnValue: _i3.Future<_i4.Either<Exception, _i5.Post>>.value(
            _i6.dummyValue<_i4.Either<Exception, _i5.Post>>(
          this,
          Invocation.method(
            #getPost,
            [],
            {#postId: postId},
          ),
        )),
      ) as _i3.Future<_i4.Either<Exception, _i5.Post>>);

  @override
  _i3.Future<_i4.Either<Exception, List<_i5.Post>>> getPosts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i3.Future<_i4.Either<Exception, List<_i5.Post>>>.value(
            _i6.dummyValue<_i4.Either<Exception, List<_i5.Post>>>(
          this,
          Invocation.method(
            #getPosts,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<Exception, List<_i5.Post>>>);
}
